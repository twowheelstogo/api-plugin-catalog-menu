"A Modifier Group"
type ModifierGroup {
    "Modifier group ID"
    id: ID!

    "the name of the modifier group"
    name: String!

    "timestamp of creation"
    createdAt: DateTime!

    "last time udpate timestamp"
    updatedAt: DateTime!

    "note of the modifier group"
    note: String

    "related items"
    items: [ModifierGroupItem]

    "Check if modifier group is required"
    required: Boolean
}

type ModifierGroupItem {
    "ID of the item"
    id: ID!

    "Product configuration data"
    productConfiguration: ProductConfiguration!

    "Pricing of the modifier group item"
    pricing: ProductPricingInfo

    "Title of the modifier group item"
    title: String!

    "Page title of the modifier group item"
    pageTitle: String

    "description of the modifier group item"
    description: String

    "Related modifier groups"
    modifierGroups: [ModifierGroup]

    "Related modifier group IDs"
    modifierGroupIds: [ID] 

}

input ModifierGroupItemInput {
    "Product Configuration data"
    productConfiguration: ProductConfiguration!

    "Pricing of the modifier group item"
    pricing: ProductPricingInfo

    "Title of the modifier group item"
    title: String!

    "Page title of the modifier group item"
    pageTitle: String

    "description of the modifier group item"
    description: String
}

"Mutation input for a modifier group"
input ModifierGroupInput {
    "Name for the modifier group"
    name: String
    
    "note for the modifier group"
    note: String

    "modifier group items"
    items: [ModifierGroupItemInput]!
}

"Input for the `createModifierGroup` mutation"
input CreateModifierGroupInput {
   "Modifier Group input"
   modifierGroupInput: ModifierGroupInput!
}

"Response payload of `createModifierGroup` mutation"
type CreateModifierGroupPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The created modifier group"
  modifierGroup: ModifierGroup!
}

extend type Product {
    "The list of modifier group IDs that have been applied to this product"
    modifierGroupIds: [ID]

    "related modified groups"
    modifierGroups: [ModifierGroup]
}

extend type CatalogProduct {
    "The list of modifier group IDs that have been applied to this product"
    modifierGroupIds: [ID]

    "related modified groups"
    modifierGroups: [ModifierGroup]
}

extend type Query {
    "gets a single modifier group by id"
    modifierGroup(
        id: ID!
    ): ModifierGroup!
}
